
# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/103dOs3v3MMR9alrZEKHwgU2dJRUWg1cN

# Importando os dados sobre as missões espaciais
"""

from google.colab import files
import pandas as pd

# O arquivo deve estar nomeado como: "Space_Corrected.csv"

uploaded = files.upload()
df = pd.read_csv("Space_Corrected.csv")

"""# Analisando os dados"""

df.head(21)

df.tail(21)

"""# 1. Quantos foguetes foram lançados?"""

qtd_missoes_registradas = len(df)

print("A tabela possuí " + str(qtd_missoes_registradas) + " missões em registro")

status_missoes = df['Status Mission'].value_counts(dropna=False)

sucessos = status_missoes.get('Success', 0)

falhas = len(df) - (sucessos)

print(str(sucessos) + " foguetes obtiveram sucesso na missão de lançamento")
print(str(falhas) + " foguetes obtiveram falha na missão de lançamento")

"""# 2. Quais são os três países que mais lançaram foguetes?

"""

df['Países'] = df['Location'].apply(lambda x: x.split(',')[-1].strip())

lancamento_contagem = df['Países'].value_counts()

top_3_paises = lancamento_contagem.head(3)
top_3_paises

"""# 3. Quantos foguetes foram lançados por ano de lançamento?"""

def tratar_datas(data):
    try:
        return pd.to_datetime(data, format='%a %b %d, %Y %H:%M UTC')
    except ValueError:
        try:
            return pd.to_datetime(data, format='%a %b %d, %Y')
        except ValueError:
            return pd.NaT

df['Datum'] = df['Datum'].apply(tratar_datas)

df['Ano'] = df['Datum'].dt.year

lancamentos_por_ano = df.groupby('Ano').size()

print(lancamentos_por_ano.to_string())

"""# 4. Qual a média de lançamentos por ano?

"""

media_lancamentos_por_ano = lancamentos_por_ano.mean()
media_lancamentos_por_ano = round(media_lancamentos_por_ano, 2)

print("Média de lançamentos com base nos registros: " + str(media_lancamentos_por_ano))

"""# 5. Qual empresa lançou mais foguetes?

"""

lancamento_contagem = df['Company Name'].value_counts()

mais_lancamentos = lancamento_contagem.idxmax()
contagem_lancamento = lancamento_contagem.max()

print("A empresa que lançou mais foguetes é a " + str(mais_lancamentos) + " com " + str(contagem_lancamento) + " lançamentos")

"""# 6. Qual foi a missão mais cara? Quanto custou?


"""

print(df.columns)

df.columns = df.columns.str.strip()

df['Rocket'] = pd.to_numeric(df['Rocket'], errors='coerce')

valor_max = df['Rocket'].max()

missao_mais_cara = df[df['Rocket'] == valor_max].iloc[-1]

print("A missão mais cara é: " + str(missao_mais_cara['Detail']))
print("Custo: " + str(missao_mais_cara['Rocket']) + " milhões de dólares")

"""# 7. A missão mais cara falhou o foi bem-sucedida?


"""

status_missao = missao_mais_cara['Status Mission']

if status_missao == 'Success':
    print("A missão mais cara foi bem-sucedida.")
else:
    print("A missão mais cara falhou.")

"""# 8. Existem foguetes que foram relançados?


"""

contagem_foguetes = df['Detail'].value_counts()

foguetes_reutilizados = contagem_foguetes[contagem_foguetes > 1]

print(foguetes_reutilizados)

"""# 9. Todos os foguetes ainda estão ativos? Se não, quantos estão desativados?



"""

status_contagem = df['Status Rocket'].value_counts()

foguetes_desativados = status_contagem.get('StatusRetired', 0)

todos_ativos = foguetes_desativados == 0

if todos_ativos:
    print("Todos os foguetes estão ativos.")
else:
  print("Total de foguetes desativados: " + str(foguetes_desativados))
  print("\nStatus dos foguetes:\n" + str(status_contagem))

"""# 10. O mundo lança mais foguetes em qual estação do ano?

## Estação do Hemisfério Norte
"""

def estacao_hemisferio_norte(data):
    if pd.Timestamp(data) >= pd.Timestamp(year=data.year, month=12, day=21) or pd.Timestamp(data) < pd.Timestamp(year=data.year, month=3, day=20):
        return 'Inverno'
    elif pd.Timestamp(data) >= pd.Timestamp(year=data.year, month=3, day=20) and pd.Timestamp(data) < pd.Timestamp(year=data.year, month=6, day=21):
        return 'Primavera'
    elif pd.Timestamp(data) >= pd.Timestamp(year=data.year, month=6, day=21) and pd.Timestamp(data) < pd.Timestamp(year=data.year, month=9, day=23):
        return 'Verão'
    else:
        return 'Outono'

df['Estacao_Hemisferio_Norte'] = df['Datum'].apply(estacao_hemisferio_norte)

lancamentos_por_estacao_norte = df['Estacao_Hemisferio_Norte'].value_counts()

inverno_norte = lancamentos_por_estacao_norte.get('Inverno', 0)
primavera_norte = lancamentos_por_estacao_norte.get('Primavera', 0)
verao_norte = lancamentos_por_estacao_norte.get('Verão', 0)
outono_norte = lancamentos_por_estacao_norte.get('Outono', 0)

print("Lançamentos por estação no Hemisfério Norte:\n")
print(lancamentos_por_estacao_norte)

if inverno_norte > primavera_norte and inverno_norte > verao_norte and inverno_norte > outono_norte:
    print("\nO mundo lança mais foguetes no Inverno")
elif primavera_norte > verao_norte and primavera_norte > outono_norte and primavera_norte > inverno_norte:
    print("\nO mundo lança mais foguetes na Primavera")
elif verao_norte > outono_norte and verao_norte > inverno_norte and verao_norte > primavera_norte:
    print("\nO mundo lança mais foguetes no Verão")
else:
    print("\nO mundo lança mais foguetes no Outono")

"""## Estação do Hemisfério Sul


"""

def estacao_hemisferio_sul(data):
    if pd.Timestamp(data) >= pd.Timestamp(year=data.year, month=12, day=21) or pd.Timestamp(data) < pd.Timestamp(year=data.year, month=3, day=20):
        return 'Verão'
    elif pd.Timestamp(data) >= pd.Timestamp(year=data.year, month=3, day=20) and pd.Timestamp(data) < pd.Timestamp(year=data.year, month=6, day=21):
        return 'Outono'
    elif pd.Timestamp(data) >= pd.Timestamp(year=data.year, month=6, day=21) and pd.Timestamp(data) < pd.Timestamp(year=data.year, month=9, day=23):
        return 'Inverno'
    else:
        return 'Primavera'

df['Estacao_Hemisferio_Sul'] = df['Datum'].apply(estacao_hemisferio_sul)

lancamentos_por_estacao_sul = df['Estacao_Hemisferio_Sul'].value_counts()

inverno_sul = lancamentos_por_estacao_sul.get('Inverno', 0)
primavera_sul = lancamentos_por_estacao_sul.get('Primavera', 0)
verao_sul = lancamentos_por_estacao_sul.get('Verão', 0)
outono_sul = lancamentos_por_estacao_sul.get('Outono', 0)

print("Lançamentos por estação no Hemisfério Sul:\n")
print(lancamentos_por_estacao_sul)

if inverno_sul > primavera_sul and inverno_sul > verao_sul and inverno_sul > outono_sul:
    print("\nO mundo lança mais foguetes no Inverno")
elif primavera_sul > verao_sul and primavera_sul > outono_sul and primavera_sul > inverno_sul:
    print("\nO mundo lança mais foguetes na Primavera")
elif verao_sul > outono_sul and verao_sul > inverno_sul and verao_sul > primavera_sul:
    print("\nO mundo lança mais foguetes no Verão")
else:
    print("\nO mundo lança mais foguetes no Outono")